var warningApi = require("../../../api/warning.js")
var env = require("../../../config/host.js")
const app = getApp();

Page({
  data: {
    warningId:'',
    currentTab: 'tab1',
    imgData: [],
    historyData: [],
    showBtn: false,
    showBtnArr: ['0','0','0','0'],
    warningDetail: {},
    warningRecord: {},
    token: '',
    domain: '',
    fileArr: [],
    btnStatus: {}, // 从待办警情跳转过来的按钮状态
    operType: 8,
    projectDetail: {},
    btnType: 1, // 1-从待办警情跳转过来， 2-从专家研判跳转过来
    isLeader: false,  // 从专家研判跳转过来的按钮状态
    timer: null,
    allHeight: '',
    height: ''
  },
  onLoad: function(options) {
    this.setData({
      warningId: options.id,
      domain: env.domain,
      token: app.globalData.token,
      btnType: options.type,
      isLeader: options.leader
    })
  },
  onUnload: function() {
    clearInterval(this.data.timer)
  },
  onShow: function (options){
    this.queryWarningDetail(this.data.warningId)
    this.queryWarningRecord(this.data.warningId)
    this.controlBtn(this.data.warningId)
    this.getBodyHeight()
  },
  // 警情详情当前打开人加入到map
  openWarningDetail() {
    const data = {
      "warningId": this.data.warningId,
      "type": '0'
    }
    warningApi.openWarningDetail(data).then(res => {
      if (res.code == 200) {
        if (res.data) {
          this.setTimer()
        } else {
          wx.showToast({
            title: '当前警情正在被他人编辑，请稍候再试！',
            icon: 'none',
            duration: 2000
          })
          setTimeout(() => {
            wx.navigateBack()
          },2000)
        }
      } else {
        wx.showToast({
          title: res.msg,
          icon:'none',
          duration: 2000
        })
        setTimeout(() => {
            wx.navigateBack()
          },2000)
      }
    }).catch(err => {
      console.log(err)
    })
  },
  // 设置定时器
  setTimer() {
    if (this.data.timer == null) {
      let timer = setInterval(() => {
        this.updateDetailMap()
      }, 15000)
      this.setData({
        timer: timer
      })
    }
  },
  // 更新警情详情Map
  updateDetailMap() {
    let data = {
      warningId: this.data.warningId,
      type: '1'
    }
    warningApi.updateDetailMap(data).then(res => {
      // console.log('')
    }).catch(err => {
      console.log(err)
    })
  },
  // 点击最外层view收起按钮
  clickOuter() {
    this.setData({
      showBtn: false
    })
  },
  // 获取历史警情列表
  getHistoryList(id) {
    warningApi.queryHistoryList(id).then(res => {
      if (res.code == 200) {
        this.setData({
          historyData: res.data.list || []
        })
      }
    }).catch(err =>{
      console.log(err)
    })
  },
  // 获取项目详情
  getProjectDetail(id) {
    warningApi.queryProjectDetail(id).then(res => {
      if (res.code === 200) {
        this.setData({
          projectDetail: res.data.monitorProject
        })
      }
    }).catch(err => {
      console.log(err)
    })
  },
  // 获取警情详情
  queryWarningDetail(id) {
    warningApi.getWarningDetail(id).then(res => {
      if (res.code === 200) {
        wx.setNavigationBarTitle({
          title: res.data.projectShortName
        })
        // 新警情需要判断当前是否有他人正在操作
        if (res.data.warningStatus == '0') {
          this.openWarningDetail()
        }
        this.getProjectDetail(res.data.projectId)
        this.getHistoryList(res.data.projectId)
        for(var i in res.data) {
          if (res.data[i] == null) {
            res.data[i] = ''
          }
        }
        // 处理附件
        // if (res.data.attachId != '') {
        //   res.data.attachId = res.data.attachId.split(',')
        //   for (var i = 0; i < res.data.attachId.length; i++) {
        //     res.data.attachId[i] = env.domain + 'sys/file/download?id=' + res.data.attachId[i] + '&token=' + app.globalData.token
        //   }
        // }
        console.log(res.data.attachId)
        this.setData({
          warningDetail: res.data
        })
      } else {
        wx.showToast({
          title: res.msg,
        })
      }
    }).catch(err => {
      console.log(err)
    })
  },
  // 获取警情处理记录
  queryWarningRecord(id) {
    warningApi.getWarningDealRecord(id).then(res => {
      if (res.code === 200) {
        // 替换&nbsps为空格
        for (var j = 0; j < res.data.judgedRecord.length; j++ ){
          res.data.judgedRecord[j].expertNames = res.data.judgedRecord[j].expertNames.replace(/&nbsp;/g, ' ')
        }
        console.log(res.data)
        // 处理图片和视频的显示
        // const feedback = res.data.feedbackRecord
        // for(var i = 0; i < feedback.length; i++) {
        //   if (feedback[i].imgAttachId != ''){
        //     feedback[i].imgAttachId = feedback[i].imgAttachId.split(',')
        //     // 删除最后一个空元素
        //     if (feedback[i].imgAttachId[feedback[i].imgAttachId.length - 1] == '') {
        //       feedback[i].imgAttachId.pop()
        //     }
        //     for (var m = 0; m < feedback[i].imgAttachId.length; m++) {
        //       res.data.feedbackRecord[i].imgAttachId[m] = env.domain + 'sys/file/download?id=' + feedback[i].imgAttachId[m] + '&token=' + app.globalData.token
        //     }
        //   }
        //   if (feedback[i].videoAttachId != '') {
        //     feedback[i].videoAttachId = feedback[i].videoAttachId.split(',')
        //     // 删除最后一个空元素
        //     if (feedback[i].videoAttachId[feedback[i].videoAttachId.length - 1] == '') {
        //       feedback[i].videoAttachId.pop()
        //     }
        //     for (var m = 0; m < feedback[i].videoAttachId.length; m++) {
        //       res.data.feedbackRecord[i].videoAttachId[m] = env.domain + 'sys/file/download?id=' + feedback[i].imgAttachId[m] + '&token=' + app.globalData.token
        //     }
        //   }
        // }
        this.setData({
          warningRecord: res.data
        })
      } else {
        wx.showToast({
          title: res.msg,
        })
      }
    }).catch(err => {
      console.log(err)
    })
  },
  // 控制按钮显示api
  controlBtn(id) {
    warningApi.controlButton(id).then(res => {
      if (res.code === 200) {
        var type
        if (res.data.showUpButton && res.data.showDownButton) {
          type = 8
        } else if (res.data.showUpButton && !res.data.showDownButton) {
          type = 2
        } else if (!res.data.showUpButton && res.data.showDownButton) {
          type = 3
        }
        this.setData({
          btnStatus: res.data,
          operType: type
        })
        console.log(type)
      } else {
        wx.showToast({
          title: res.msg,
        })
      }
    }).catch(err => {
      console.log(err)
    })
  },
  goPage(e){
    // 按钮禁用
    if (!this.data.btnStatus.canOperation && parseInt(this.data.btnType) === 1) {
      return
    }
    console.log(e.currentTarget.dataset.url)
    wx.navigateTo({
      url: e.currentTarget.dataset.url+"&warningId="+this.data.warningId,
    })
  },
  // 切换tab
  onChange(e) {
    this.setData({
      currentTab: e.detail.key,
      showBtn: false
    })
  },
  gotoHistory(e) {
    const id = e.currentTarget.dataset.id
    wx.navigateTo({
      url: '/pages/warning/history/history?id=' + id,
    })
  },
  // 获取body高度
  getBodyHeight() {
    var that = this
    var query = wx.createSelectorQuery();
    query.select('.tab-class').boundingClientRect(function (rect) {
      that.setData({
        height: rect.height,
      })
    }).exec();
    wx.getSystemInfo({
      success: function (res, rect) {
        that.setData({
          allHeight: res.windowHeight
        })
      }
    })
    console.log(this.data.allHeight - this.data.height)
  },
  // 打开地图
  gotoMap(e) {
    const lat = Number(e.currentTarget.dataset.lat)
    const lon = Number(e.currentTarget.dataset.lon)
    wx.openLocation({
      latitude: lat,
      longitude: lon,
      scale: 18
    })
  }
})