var warnListApi = require("../../../api/userList.js")
 
import {
  $startWuxRefresher,
  $stopWuxRefresher,
  $stopWuxLoader
} from '../../../components/index'
const getList = (count = 10, step = 0) => [...new Array(count)].map((n, i) => ({
  title: `Pull down ${i + step}`,
  content: 'Wux Weapp'
}))

Page({

  /**
   * 页面的初始数据
   */
  data: {
    currentTab: 'tab1',
    color: '',
    items: [],
    count: 0,
    scrollTop: 0,
    listonoff1: false,
    listonoff2: false,
    listonoff3: false,
    tabs: [
      {
        key: 'tab1',
        title: '代办警情',
        content: 'Content of tab 1',
      },
      {
        key: 'tab2',
        title: '专家研判',
        content: 'Content of tab 2',
      },
      {
        key: 'tab3',
        title: '历史警情',
        content: 'Content of tab 3',
      },
    ],
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function(options) {
    $startWuxRefresher()
    var that = this

    //代办警情
    warnListApi.warningList().then(res => {
      wx.showLoading({
        title: '加载中',
        success: (res) => {
          wx.hideLoading();
        }
      })
      console.log(res)
      if (res.data.list.length == 0) {
        that.setData({
          listonoff1: true,
        })
      }
      let color;
      for (var i = 0; i < res.data.list.length; i++) {
        switch (res.data.list[i].warningGrade) {
          case '1':
            res.data.list[i].color = '#CE5B5B'
            break;
          case '2':
            res.data.list[i].color = '#E78839'
            break;
          case '3':
            res.data.list[i].color = '#F4C93C'
            break;
          case '4':
            res.data.list[i].color = '#108EE9'
            break;
        }
      }
      that.setData({
        listMessage: res.data.list,
      })
      // console.log(res.data.list)
    })

    //专家研判
    warnListApi.warningJudged().then(res => {
      console.log(res)
      if (res.data.list.length == 0) {
        that.setData({
          listonoff2: true,
        })
      }
      let color;
      for (var i = 0; i < res.data.list.length; i++) {
        switch (res.data.list[i].warningGrade) {
          case '1':
            res.data.list[i].color = '#CE5B5B'
            break;
          case '2':
            res.data.list[i].color = '#E78839'
            break;
          case '3':
            res.data.list[i].color = '#F4C93C'
            break;
          case '4':
            res.data.list[i].color = '#108EE9'
            break;
        }
      }
      that.setData({
        listJudged: res.data.list
      })
    })

    //历史警情
    warnListApi.warningHistory().then(res => {
      console.log(res)
      if (res.data.list.length == 0) {
        that.setData({
          listonoff3: true,
        })
      }
      that.setData({
        listHistory: res.data.list
      })
    })
  },

  onPageScroll(e) {
    this.setData({
      scrollTop: e.scrollTop
    })
  },
  onPulling() {
    console.log('onPulling')
  },
  onRefresh() {
    console.log('onRefresh')

    this.setData({
      count: 10
    })

    setTimeout(() => {
      this.setData({
        items: getList()
      })
      $stopWuxRefresher()
    }, 3000)
  },
  onLoadmore() {
    console.log('onLoadmore')
    setTimeout(() => {
      this.setData({
        items: [...this.data.items, ...getList(10, this.data.count)],
        count: this.data.count + 10,
      })

      if (this.data.items.length < 30) {
        $stopWuxLoader()
      } else {
        console.log('没有更多数据')
        $stopWuxLoader('#wux-refresher', this, true)
      }
    }, 3000)
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function() {

  },


  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function() {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function() {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function() {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function() {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function() {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function() {

  },

  onChange(e) {
    console.log('onChange', e)
    this.setData({
      current: e.detail.key,
    })
  },
  onTabsChange(e) {
    console.log('onTabsChange', e)
    const { key } = e.detail
    const index = this.data.tabs.map((n) => n.key).indexOf(key)

    this.setData({
      key,
      index,
    })
  },
  onSwiperChange(e) {
    console.log('onSwiperChange', e)
    const { current: index, source } = e.detail
    const { key } = this.data.tabs[index]

    if (!!source) {
      this.setData({
        key,
        index,
      })
    }
  },


  goDetail: function(e) {
    const id = e.currentTarget.dataset.id
    const type = e.currentTarget.dataset.type
    const leader = e.currentTarget.dataset.leader
    wx.navigateTo({
      url: '/pages/warning/info/info?id=' + id + '&type=' + type + '&leader=' + leader,
    })
  },
  goHistory: function (e) {
    const id = e.currentTarget.dataset.id
    wx.navigateTo({
      url: '/pages/warning/history/history?id=' + id,
    })
  },

  onNewBuilt: function() {
    wx.navigateTo({
      url: '/pages/warning/report/index',
    })
  }
})