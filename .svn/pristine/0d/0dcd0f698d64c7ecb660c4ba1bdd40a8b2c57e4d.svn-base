var warnListApi = require("../../api/userList.js")

import { $startWuxRefresher, $stopWuxRefresher, $stopWuxLoader } from '../../components/index'
const getList = (count = 10, step = 0) => [...new Array(count)].map((n, i) => ({ title: `Pull down ${i + step}`, content: 'Wux Weapp' }))

Page({

  /**
   * 页面的初始数据
   */
  data: {
    color: '',
    items: [],
    count: 0,
    scrollTop: 0,
    currentTab: '',
    // currentTab: 'tab1',
    patrolMessage: '',
    current: 'tab1',
    tabs: [
      {
        key: 'tab1',
        title: '进行中',
        content: 'Content of tab 1',
      },
      {
        key: 'tab2',
        title: '未开始',
        content: 'Content of tab 2',
      },
      {
        key: 'tab3',
        title: '已完成',
        content: 'Content of tab 3',
      },
    ],
    patrolonoff1: false,
    patrolonoff2: false,
    patrolonoff3: false,
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    // $startWuxRefresher()
    // $startWuxRefresher("#reportList");
    // $startWuxRefresher("#dangerList");

    var that = this
    warnListApi.warningPatrol().then(res => {
      wx.showLoading({
        title: '加载中',
        success: (res) => {
          wx.hideLoading();
        }
      })
      console.log(res)
      that.setData({
        patrolMessage: res.data.list,
      })
      var arr1 = []
      var arr2 = []
      var arr3 = []
      for(var i = 0; i < res.data.list.length; i ++){
        if (res.data.list[i].taskStatus == 0){
          arr1.push(res.data.list[i])
        }
        if (res.data.list[i].taskStatus == 1) {
          arr2.push(res.data.list[i])
        }
        if (res.data.list[i].taskStatus == 2) {
          arr3.push(res.data.list[i])
        }
      }
      if (res.data.list.length == 0 || arr1 == 0) {
        that.setData({
          patrolonoff1: true,
        })
      }
      if (res.data.list.length == 0 || arr2 == 0) {
        that.setData({
          patrolonoff2: true,
        })
      }
      if (res.data.list.length == 0 || arr3 == 0) {
        that.setData({
          patrolonoff3: true,
        })
      }
    })
  },


  onPageScroll(e) {
    this.setData({
      scrollTop: e.scrollTop
    })
  },
  onPulling() {
    console.log('onPulling')
  },
  onRefresh() {
    console.log('onRefresh')

    this.setData({ count: 10 })

    setTimeout(() => {
      this.setData({ items: getList() })
      $stopWuxRefresher()
    }, 3000)
  },
  onLoadmore() {
    console.log('onLoadmore')
    setTimeout(() => {
      this.setData({
        items: [...this.data.items, ...getList(10, this.data.count)],
        count: this.data.count + 10,
      })

      if (this.data.items.length < 30) {
        $stopWuxLoader()
      } else {
        console.log('没有更多数据')
        $stopWuxLoader('#wux-refresher', this, true)
      }
    }, 3000)
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  },
  onChange(e) {
    this.setData({
      currentTab: e.detail.key,
    })
  },

  onDetail:function (e){
    const id = e.currentTarget.dataset.id
    wx.navigateTo({
      url: '/pages/patrol/detail/index?id=' + id,
    })
  },

  onNewBuilt:function (){
    wx.navigateTo({
      url: '/pages/patrol/report/index',
    })
  },

  onChange(e) {
    console.log('onChange', e)
    this.setData({
      current: e.detail.key,
    })
  },
  onTabsChange(e) {
    console.log('onTabsChange', e)
    const { key } = e.detail
    const index = this.data.tabs.map((n) => n.key).indexOf(key)

    this.setData({
      key,
      index,
    })
  },
  onSwiperChange(e) {
    console.log('onSwiperChange', e)
    const { current: index, source } = e.detail
    const { key } = this.data.tabs[index]

    if (!!source) {
      this.setData({
        key,
        index,
      })
    }
  },
  // onTabsChange(e) {
  //   console.log('onTabsChange', e)
  //   // const { key } = e.detail
  //   this.setData({
  //     currentTab: e.detail.key,
  //   })
  // },
  // onSwiperChange(e) {
  //   console.log('onSwiperChange', e)
  //   // const { current: index, source } = e.detail

  //   // if (!!source) {
  //   //   this.setData({
  //   //     currentTab: e.detail.current,
  //   //   })
  //   // }
  //   this.setData({
  //     currentTab: e.detail.current,
  //   })
    
  // },
})